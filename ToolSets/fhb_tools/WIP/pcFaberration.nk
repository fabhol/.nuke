set cut_paste_input [stack 0]
version 11.3 v3
push $cut_paste_input
Group {
 name pcFaberration
 onCreate "n = nuke.thisNode()\nfor k in \['focus_error', 'offset', 'red_peak', 'green_peak', 'blue_peak']:\n    n\[k].setFlag(nuke.NO_ANIMATION)\nn.knob(\"lut\").delCurve(\"alpha\")"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\n\ndef copy_values():\n    with node:\n        Spectrum = nuke.toNode('Spectrum')\n    red_peak = Spectrum\['red_peak'].value()\n    green_peak = Spectrum\['green_peak'].value()\n    blue_peak = Spectrum\['blue_peak'].value()\n    focus_error = node\['focus_error'].value()\n    offset = node\['offset'].value()\n    list = \[red_peak, focus_error\[0] + offset, green_peak, focus_error\[1] + offset, blue_peak, focus_error\[2] + offset]\n    new_curve = 'curve \{curve l x%s %s x%s %s x%s %s\}' % (list\[0], list\[1], list\[2], list\[3], list\[4], list\[5])\n    with node:\n        n = nuke.toNode('Curve')\n        n\['lut'].fromScript(new_curve)\n        n\['helper'].setValue(n\['helper'].value() == False)\n\nif knob.name() in \['focus_error', 'offset']:\n    copy_values()\n\nif knob.name() == 'helper':\n    if knob.value() is True:\n        copy_values()\n        for k in \['focus_error', 'offset']:\n            node\[k].setEnabled(True)\n        parent\['reset'].setEnabled(False)"
 tile_color 0x7f7f7fff
 label "\[value _label_str]"
 note_font Verdana
 addUserKnob {20 Faberration_tab l Faberration}
 addUserKnob {4 output l mode t "Choose the layers that you want to affect.\n\nRGB: Only affects the RGB layer\n\nRGB + pc_alpha: Affects RGB and the per channel alpha layer. Select this mode, if you want to merge the result over a background. This only works with a pcMerge.\n\npc_alpha: Only affect the per channel alpha layer. Select this mode if your RGB channels already have chromatic aberration (for example objects from the plate), and you want to merge them on top of a background with a pcMerge.\nIn this case the RGB layer should not be premultiplied yet. Tick the 'premult RGB' check box in the pcMerge instead." M {RGB "RGB + pc_alpha" pc_alpha "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {41 alpha_operation l " alpha" t "There is no way of retaining a correct alpha channel after seperately processing the RGB channels. This lets you generate a new alpha based on the pc_alpha layer.\n\n<b>original</b>: the original alpha is piped through\n<b>average</b>/<b>max</b>/<b>min</b>: average/max/min of the three pc_alpha channels\n<b>luminance</b>: luminance of the pc_alpha using the Rec. 709 luma coefficients" -STARTLINE T GenerateAlpha.operation}
 addUserKnob {20 vectors n 1}
 vectors 0
 addUserKnob {6 overlay_vectors l "overlay vectors" t "Overlays vectors over the image to better show the effect." +STARTLINE}
 overlay_vectors true
 addUserKnob {3 res}
 res 20
 addUserKnob {78 size n 1}
 size 1
 addUserKnob {78 brightness n 1}
 brightness 5
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 divider01 l " "}
 addUserKnob {18 focus_error l "focus error" t "Controls the curve on the basis of the focus error of each channel. Look at the curve below to see how the values affect it.\nFor the initial setting you can try to pick the chromatic aberration of the plate by dragging the sample area over a neutral, high contrast aberrated edge. Then adjust the multiply value below until the effect matches the plate. Depending on which 'side' you picked, you might have to invert the effect." R -1 1}
 focus_error {-0.15 0 0.15}
 addUserKnob {7 offset t "Global scale offset. Adjust to prevent stretched or black pixels at the edge of the format." R -1 1}
 addUserKnob {6 helper t "checker to indicate whether the rgb control knobs are disabled or not" +INVISIBLE +STARTLINE}
 helper true
 addUserKnob {20 curves n 1}
 curves 0
 addUserKnob {22 whatsthis l "What am I looking at?" T "nuke.message(\"\"\"The x-axis represents a simplified visible spectrum (red - green - blue, from 0 to 1), while the y-axis represents the focus error (which is essentially a scale). This means that the curve controls the scale for every color in the spectrum individually.\n\nEither control the curve with the focus error and offset knobs, or by manipulating it directly.\"\"\")" +STARTLINE}
 addUserKnob {22 reset l "reset master curve to focus error values" -STARTLINE +DISABLED T "node = nuke.thisNode()\nnode\['helper'].setValue(True)"}
 addUserKnob {41 lut l "" +STARTLINE T Curve.lut}
 addUserKnob {20 endGroup n -1}
 addUserKnob {14 multiply t "Multiply of the effect." R 0 10}
 multiply 1
 addUserKnob {7 multiply_style l "multiply style*" t "This only makes a difference if the multiply has different values in width and height.\n\nAt 0 the multiply will affect the width/height component directly, changing the direction of the blur, while at 1 it won't change the direction but the length of the blur.\n\nTry it out with vectors enabled to see the difference.\n\n<strong>*If the multiply values for width and height are not the same, any value other than 0 causes an internal switch from Transform to STMap, which is slower to calculate."}
 addUserKnob {7 weighting l weighting* t "Controls the increase of the effect from the center to the corners.\n1: The effect increases linearly\n<1: slower increase first, then quicker towards the edge\n>1: quicker increase first and then slower towards the edge\n\n<strong>Any value other than 1 causes an internal switch from Transform to STMap, which is slower to calculate." R 0.2 2}
 weighting 1
 addUserKnob {7 saturation t "Saturation of the effect"}
 saturation 1
 addUserKnob {3 samples t "How often the curve gets subsampled. Increase the value until there are no visible steps anymore.\n\n<strong>Only use as many samples as necessary for a smooth effect, as the amount of samples directly influences the speed of this node."}
 samples 3
 addUserKnob {12 center t "Center of the effect."}
 center {{width/2} {height/2}}
 addUserKnob {22 release_center l "release center" -STARTLINE T "node = nuke.thisNode()\nnode\['center'].clearAnimated()\nnode\['release_center'].setVisible(False)\nnode\['link_center'].setVisible(True)"}
 addUserKnob {22 link_center l "link to center" -STARTLINE +HIDDEN T "node = nuke.thisNode()\nnode\['center'].setExpression('width/2',0)\nnode\['center'].setExpression('height/2',1)\nnode\['link_center'].setVisible(False)\nnode\['release_center'].setVisible(True)"}
 addUserKnob {6 invert t "Invert the effect. Useful to remove aberration." +STARTLINE}
 addUserKnob {41 filter T STMap.filter}
 addUserKnob {6 black_outside l "black outside" -STARTLINE}
 addUserKnob {26 divider03 l " "}
 addUserKnob {41 effect_mask l "effect mask*" t "The effect will be multiplied with the selected channel. Values above 1 will increase the effect, values below 1 decrease it.\n\n<strong>*Using the effect mask causes an internal switch from Transform to STMap, which is slower to calculate." T Copy5.from0}
 addUserKnob {6 invert_effect_mask l invert -STARTLINE}
 addUserKnob {41 maskChannelMask l mask T Dissolve.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Dissolve.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Dissolve.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Dissolve.fringe}
 addUserKnob {41 mix T Dissolve.which}
 addUserKnob {20 Info_tab l Info}
 addUserKnob {26 dasname l "" +STARTLINE T "<font size='2'>per channel</font><br><font size='5'>Faberration</font> v1.0.7<br><font color=#7C0000>&macr;</font><font color=#AA0000>&macr;</font><font color=#CB0000>&macr;</font><font color=#E70000>&macr;</font><font color=#FF0000>&macr;</font><font color=#E77C00>&macr;</font><font color=#CBAA00>&macr;</font><font color=#AACB00>&macr;</font><font color=#7CE700>&macr;</font><font color=#00FF00>&macr;</font><font color=#00E77C>&macr;</font><font color=#00CBAA>&macr;</font><font color=#00AACB>&macr;</font><font color=#007CE7>&macr;</font><font color=#0000FF>&macr;</font><font color=#0000E7>&macr;</font><font color=#0000CB>&macr;</font><font color=#0000AA>&macr;</font><font color=#00007C>&macr;</font>"}
 addUserKnob {26 what l "" +STARTLINE T "pcFaberration creates a realistic (lateral) chromatic aberration effect.\nIt's driven by a curve that describes the focus error of a color depen-\nding on its position in the (simplified) visible colour spectrum.\n\nIt is part of the pc-toolset, a collection of nodes that offer the possi-\nbility to affect the channels separately. Chain them up in any way to\nachieve the desired effect.\n\nAn optional per channel alpha layer (pc_alpha) can be created in or-\nder to correctly merge the result over a background. In this case it's\nnecessary to use the pcMerge instead of a regular Merge."}
 addUserKnob {26 divider l "" +STARTLINE}
 addUserKnob {26 info l "" +STARTLINE T "Last change: 2020-04-25\n"}
 addUserKnob {26 name_1 l "" +STARTLINE T "\nFabian Holtz"}
 addUserKnob {26 mail l "" +STARTLINE T "<a href=\"mailto:holtzf+nuke@gmail.com\"><span style=\"color:#C8C8C8;\">holtzf+nuke@gmail.com</a>"}
 addUserKnob {1 _label_str l "" +STARTLINE +INVISIBLE}
 _label_str "\[if \{\[value this.Switch2.which]\} \{return \"STMap\"\} else \{return \"Transform\"\}]"
}
 Input {
  inputs 0
  name mask
  xpos -1800
  ypos 2246
  number 1
 }
 Dot {
  name Dot1
  xpos -1766
  ypos 2322
 }
 Input {
  inputs 0
  name Input
  xpos -1580
  ypos -706
 }
 Dot {
  name Dot34
  xpos -1546
  ypos -510
 }
set N7cf28400 [stack 0]
 Dot {
  name Dot30
  xpos -1106
  ypos -510
 }
set N247ba000 [stack 0]
 Dot {
  name Dot31
  xpos -996
  ypos -510
 }
 Expression {
  temp_name0 resx
  temp_expr0 "width / resolution"
  temp_name1 resy
  temp_expr1 "height / pixel_aspect / rint(resolution * height / width / pixel_aspect)"
  channel0 none
  channel1 none
  channel2 none
  expr3 "clamp(1 - hypot((x+.5) % resx - resx/2, (y+.5) / pixel_aspect % resy - resy / 2) + (size-1) / 2)"
  name Vectors
  xpos -1030
  ypos -442
  addUserKnob {20 User}
  addUserKnob {3 resolution}
  resolution {{parent.res}}
  addUserKnob {7 size R 0 10}
  size {{parent.size}}
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle4
  xpos -1030
  ypos -394
 }
 Multiply {
  channels rgb
  value {{parent.brightness}}
  name Multiply2
  xpos -1030
  ypos -346
 }
 Dot {
  name Dot32
  xpos -996
  ypos -270
 }
push $N247ba000
 Merge2 {
  inputs 2
  name Merge3
  xpos -1140
  ypos -273
  disable {{"!parent.overlay_vectors || Vectors.resolution <= 0 || Vectors.size <= 0 || Vectors.brightness <= 0"}}
 }
 Dot {
  name Dot2
  xpos -1106
  ypos -174
 }
set Nf281e800 [stack 0]
 Dot {
  name Dot3
  xpos -1216
  ypos -174
 }
add_layer {pc_alpha pc_alpha.red pc_alpha.green pc_alpha.blue}
 Shuffle {
  in alpha
  red alpha
  green alpha
  blue alpha
  out pc_alpha
  name Shuffle1
  label "\[value in] -> \[value out]"
  xpos -1250
  ypos -112
  disable {{"\[string first \"pc_alpha\" \[layers \[input this 0]]]>-1"}}
 }
 Dot {
  name Dot4
  xpos -1216
  ypos -30
 }
push $Nf281e800
 Copy {
  inputs 2
  channels pc_alpha
  name Copy2
  xpos -1140
  ypos -47
 }
 Remove {
  operation keep
  channels rgb
  channels2 pc_alpha
  name Remove1
  xpos -1140
  ypos 38
 }
 Dot {
  name Dot23
  xpos -1106
  ypos 138
 }
set N2b136400 [stack 0]
 Dot {
  name Dot37
  xpos -1326
  ypos 138
 }
 Dot {
  name Dot29
  xpos -1326
  ypos 1770
 }
set Nc95b3400 [stack 0]
 Input {
  inputs 0
  name effect_mask
  xpos -480
  ypos 230
  number 2
 }
 Dot {
  name Dot11
  xpos -446
  ypos 330
 }
set Ndcfb0800 [stack 0]
push $Ndcfb0800
 Copy {
  inputs 2
  to0 rgba.red
  from1 {{{from0}}}
  to1 rgba.green
  name Copy5
  xpos -480
  ypos 392
 }
 Invert {
  channels {rgba.red -rgba.green -rgba.blue none}
  name Invert1
  xpos -480
  ypos 494
  disable {{!parent.invert_effect_mask}}
 }
 Dot {
  name Dot24
  xpos -446
  ypos 594
 }
push $N2b136400
 NoTimeBlur {
  rounding floor
  name NoTimeBlur1
  xpos -1140
  ypos 230
 }
 Dot {
  name Dot18
  xpos -1106
  ypos 330
 }
set Nf28afc00 [stack 0]
 Dot {
  name Dot26
  xpos -886
  ypos 330
 }
set Nb6331000 [stack 0]
 Dot {
  name Dot22
  xpos -666
  ypos 330
 }
 Expression {
  temp_name0 center
  temp_expr0 parent.center
  expr0 "abs(1 - abs(atan(x + .5 - center.x, (y + .5 - center.y) / pixel_aspect) / pi) * 2)"
  expr1 "hypot(x + .5 - center.x, (y + .5 - center.y) / pixel_aspect) / hypot((width - 1) / 2, (height - 1) / 2 / pixel_aspect)"
  channel2 none
  channel3 none
  name Expression4
  xpos -700
  ypos 398
 }
 Expression {
  temp_name0 power
  temp_expr0 "1 / parent.weighting"
  expr0 "1 / g * pow(g, power) * (1 - lerp(1 - r, 0, parent.multiply.w) - lerp(r, 0, parent.multiply.h))"
  channel1 {-rgba.red rgba.green -rgba.blue none}
  expr1 "1 / g * pow(g, power)"
  channel2 none
  channel3 none
  name Expression5
  xpos -700
  ypos 494
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels {rgba.red rgba.green -rgba.blue none}
  Bchannels {rgba.red rgba.green -rgba.blue none}
  output {rgba.red rgba.green -rgba.blue none}
  name Merge5
  xpos -700
  ypos 590
  disable {{"!\[exists parent.input2.name] || Copy5.from0 == 0"}}
 }
 NoTimeBlur {
  rounding floor
  name NoTimeBlur2
  xpos -700
  ypos 686
 }
 Expression {
  temp_name0 center
  temp_expr0 parent.center
  temp_name1 focus_error
  temp_expr1 detour.focus_error
  expr0 "((x + .5 - center.x) / (focus_error * lerp(parent.multiply.w * g, r, parent.multiply_style) + 1) + center.x) / width"
  expr1 "((y + .5 - center.y) / (focus_error * lerp(parent.multiply.h * g, r, parent.multiply_style) +1 ) + center.y) / height"
  channel2 none
  channel3 none
  name Expression6
  xpos -700
  ypos 782
 }
 Dot {
  name Dot27
  xpos -666
  ypos 882
 }
push $Nb6331000
 BlackOutside {
  name BlackOutside
  xpos -920
  ypos 782
  disable {{!parent.black_outside}}
 }
 STMap {
  inputs 2
  uv rgb
  name STMap
  xpos -920
  ypos 872
 }
 Dot {
  name Dot25
  xpos -886
  ypos 1074
 }
push $Nf28afc00
 Transform {
  scale {{detour.focus_error*parent.multiply.w+1} {detour.focus_error*parent.multiply.h+1}}
  center {{parent.center} {parent.center}}
  filter {{STMap.filter}}
  black_outside {{parent.black_outside}}
  shutteroffset centred
  name Transform
  xpos -1140
  ypos 782
 }
 Switch {
  inputs 2
  which {{"parent.weighting!=1 || (Copy5.from0!=0 && \[exists parent.input2.name]) || (parent.multiply.w != parent.multiply.h && parent.multiply_style != 0)"}}
  name Switch2
  xpos -1140
  ypos 1070
 }
add_layer {correct_values correct_values.red correct_values.green correct_values.blue correct_values.alpha correct_values.alpha}
 AddChannels {
  channels {correct_values.red correct_values.green correct_values.blue none}
  color 1
  name AddChannels1
  xpos -1140
  ypos 1184
 }
 Multiply {
  value {{"lerp(luminance, spectrum.r, parent.saturation)"} {"lerp(luminance, spectrum.g, parent.saturation)"} {"lerp(luminance, spectrum.b, parent.saturation)"} 0}
  name Multiply1
  xpos -1140
  ypos 1256
  addUserKnob {20 User}
  addUserKnob {18 spectrum}
  spectrum {{Spectrum.lut.red(x%1)} {Spectrum.lut.green(x%1)} {Spectrum.lut.blue(x%1)}}
  addUserKnob {7 luminance}
  luminance {{spectrum.r*0.2126+spectrum.g*0.7152+spectrum.b*0.0722}}
 }
 TimeBlur {
  divisions {{parent.samples}}
  shutter {{1/(divisions+1)*divisions}}
  shuttercustomoffset {{1/(divisions+1)}}
  name TimeBlur
  xpos -1140
  ypos 1358
 }
 Dot {
  name Dot16
  xpos -1106
  ypos 1482
 }
set N2ac3ec00 [stack 0]
push $N2ac3ec00
 Dot {
  name Dot17
  xpos -886
  ypos 1482
 }
 Shuffle {
  in {correct_values.red correct_values.green correct_values.blue -correct_values.alpha}
  alpha blue
  black red
  white green
  red2 blue
  out rgb
  out2 pc_alpha
  name Shuffle3
  label "\[value in]"
  xpos -920
  ypos 1544
 }
 Dot {
  name Dot15
  xpos -886
  ypos 1626
 }
 Merge2 {
  inputs 2
  operation divide
  Achannels rgb
  Bchannels rgb
  output rgb
  also_merge pc_alpha
  name Merge1
  xpos -1140
  ypos 1622
 }
 Switch {
  inputs 2
  which {{TimeBlur.divisions<2}}
  name Switch1
  xpos -1140
  ypos 1766
 }
 Dot {
  name Dot9
  xpos -1106
  ypos 2010
 }
set N10437800 [stack 0]
 Dot {
  name Dot8
  xpos -1106
  ypos 2106
 }
set N2c016400 [stack 0]
 Group {
  name GenerateAlpha
  tile_color 0x7f7f7fff
  xpos -1140
  ypos 2198
  addUserKnob {20 GenerateAlpha_tab l GenerateAlpha}
  addUserKnob {4 operation M {original average luminance max min "" "" "" ""}}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 14
  }
  Dot {
   name Dot1
   xpos -6
   ypos 114
  }
set Ne91ec400 [stack 0]
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 min(pc_alpha.red,pc_alpha.green,pc_alpha.blue)
   channel1 none
   channel2 none
   channel3 none
   name min
   xpos 180
   ypos 206
  }
push $Ne91ec400
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 max(pc_alpha.red,pc_alpha.green,pc_alpha.blue)
   channel1 none
   channel2 none
   channel3 none
   name max
   xpos 70
   ypos 206
  }
push $Ne91ec400
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 pc_alpha.red*0.2126+pc_alpha.green*0.7152+pc_alpha.blue*0.0722
   channel1 none
   channel2 none
   channel3 none
   name luminance
   xpos -40
   ypos 206
  }
push $Ne91ec400
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 (pc_alpha.red+pc_alpha.green+pc_alpha.blue)/3
   channel1 none
   channel2 none
   channel3 none
   name average
   xpos -150
   ypos 206
  }
push $Ne91ec400
  Dot {
   name Dot2
   xpos -226
   ypos 210
  }
  Switch {
   inputs 5
   which {{parent.operation}}
   name Switch1
   xpos -40
   ypos 302
  }
  Output {
   name Output1
   xpos -40
   ypos 398
  }
 end_group
push $N2c016400
push $N10437800
push $Nc95b3400
push $N7cf28400
 Copy {
  inputs 2
  channels pc_alpha
  name Copy10
  xpos -1580
  ypos 1753
  disable {{"parent.output==0 || Dissolve.which<=0 || Dissolve.disable==1"}}
 }
 Dot {
  name Dot6
  xpos -1546
  ypos 1914
 }
set Ned1da400 [stack 0]
 Dot {
  name Dot7
  xpos -1326
  ypos 1914
 }
 Copy {
  inputs 2
  channels rgb
  name Copy1
  xpos -1360
  ypos 1993
  disable {{parent.output==2}}
 }
 Copy {
  inputs 2
  channels pc_alpha
  name Copy6
  xpos -1360
  ypos 2089
  disable {{parent.output==0}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy11
  xpos -1360
  ypos 2192
  disable {{GenerateAlpha.operation==0}}
 }
 Dot {
  name Dot10
  xpos -1326
  ypos 2322
 }
push $Ned1da400
 Dissolve {
  inputs 2+1
  which 1
  maskChannelMask none
  name Dissolve
  xpos -1580
  ypos 2312
  disable {{"(!\[exists parent.input0.name]) && (Merge3.disable) || TimeBlur.divisions < 1"}}
 }
 Output {
  name Output1
  xpos -1580
  ypos 2438
 }
 Group {
  inputs 0
  name Spectrum
  xpos -1030
  ypos 1238
  hide_input true
  addUserKnob {20 User}
  addUserKnob {26 info l " " T "The red, green and blue curves show the contribution of the\nchannels to the spectrum. If you're changing this, make sure to\nupdate the x-coordinate of the peak values of the colors after."}
  addUserKnob {41 lut l "" +STARTLINE T Sampler1.lut}
  addUserKnob {78 red_peak l "red peak: x = " n 1}
  red_peak 0.25
  addUserKnob {78 green_peak l "green peak: x = " n 1}
  green_peak 0.5
  addUserKnob {78 blue_peak l "blue peak: x = " n 1}
  blue_peak 0.75
 }
  Input {
   inputs 0
   name Input1
   xpos -464
   ypos 122
  }
  Sampler {
   lut {red {curve L 0 x0.25 1 0}
     green {curve L x0.25 0 x0.5 1 0}
     blue {curve L x0.5 0 x0.75 1 0}}
   name Sampler1
   xpos -464
   ypos 162
  }
  Output {
   name Output1
   xpos -464
   ypos 262
  }
 end_group
 NoOp {
  inputs 0
  name detour
  xpos -1030
  ypos 686
  addUserKnob {20 User}
  addUserKnob {7 focus_error l "focus error" R -10 10}
  focus_error {{"Curve.lut.curve(x % 1) * (parent.invert ? -1 : 1) / 100"}}
 }
 TimeDissolve {
  inputs 0
  lut {curve {curve l x0.25 -0.15 x0.5 0 0.15}}
  name Curve
  knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\nparent = nuke.thisParent()\nprint knob\nif knob.name() == 'lut':\n    if parent\['helper'].value() is True:\n        for k in \['focus_error', 'offset']:\n            parent\[k].setEnabled(False)\n        parent\['reset'].setEnabled(True)\n        parent\['helper'].setValue(False)"
  xpos -1030
  ypos 614
  hide_input true
  addUserKnob {20 User}
  addUserKnob {6 helper +STARTLINE}
 }
end_group
