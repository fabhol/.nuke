set cut_paste_input [stack 0]
version 11.3 v3
push $cut_paste_input
Group {
 name pcFaberration
 onCreate "n = nuke.thisNode()\nn\['scale'].setFlag(nuke.NO_ANIMATION)\nn\['offset'].setFlag(nuke.NO_ANIMATION)"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\n\ndef copy_values():\n    scale = node\['scale'].value()\n    list = \[scale\[0],scale\[1],scale\[2],0]    \n    offset = node\['offset'].value()\n    new_curve = 'curve \{curve l x0.25 %s x0.5 %s x0.75 %s\}' % (list\[0]+offset, list\[1]+offset, list\[2]+offset)\n    with node:\n        td = nuke.toNode('TimeDissolve')\n        td\['lut'].fromScript(new_curve)\n        td\['helper'].setValue(td\['helper'].value()==False)\n\nif knob.name() in \['scale', 'offset']:\n    copy_values()\n\nif knob.name() == 'helper':\n    if knob.value() is True:\n        copy_values()\n        node\['scale'].setEnabled(True)\n        node\['offset'].setEnabled(True)"
 tile_color 0x7f7f7fff
 note_font Verdana
 addUserKnob {20 FaberrationTab l Faberration}
 addUserKnob {4 output l mode t "Choose the layers that you want to affect.\n\nRGB: Only affects the RGB layer\n\nRGB + pc_alpha: Affects RGB and the per channel alpha layer. Select this mode, if you want to merge the result over a background. This only works with a pcMerge.\n\npc_alpha: Only affect the per channel alpha layer. Select this mode if your RGB channels already have chromatic aberration (for example objects from the plate), and you want to merge them on top of a background with a pcMerge.\nIn this case the RGB layer should not be premultiplied yet. Tick the 'premult RGB' check box in the pcMerge instead." M {RGB "RGB + pc_alpha" pc_alpha "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {41 alpha_operation l " alpha" t "There is no way of retaining a correct alpha channel after seperately processing the RGB channels. This lets you generate a new alpha based on the pc_alpha layer.\n\n<b>original</b>: the original alpha is piped through\n<b>average</b>/<b>max</b>/<b>min</b>: average/max/min of the three pc_alpha channels\n<b>luminance</b>: luminance of the pc_alpha using the Rec. 709 luma coefficients" -STARTLINE T GenerateAlpha.operation}
 addUserKnob {6 show_vectors l "show vectors" t "Overlays vectors over the image to better show the effect." +STARTLINE}
 addUserKnob {3 res -STARTLINE}
 res 20
 addUserKnob {26 divider01 l " "}
 addUserKnob {3 samples l samples* t "How often the curve gets subsampled. Carefully increase the value until there are no visible steps anymore.\n\n*The amount of samples directly influences the speed of this node."}
 samples 3
 addUserKnob {22 optimize -STARTLINE T "import faberration\nreload(faberration)\nnode = nuke.thisNode()\nsamples = int(node\['samples'].value())\nfaberration.start(node,samples)\n"}
 addUserKnob {7 optimize_mix l "" -STARTLINE}
 addUserKnob {6 samples_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {26 spacer l " " T " "}
 addUserKnob {18 scale t "Controls the curve on the basis of the scale of each channel. Look at the curve below to see how the values affect it.\nFor the initial setting you can try to pick the chromatic aberration of the plate by dragging the sample area over a high contrast aberrated edge. Then adjust until it matches the plate." R -1 1}
 scale {0 0.1 1}
 addUserKnob {7 offset t "Global scale offset. Adjust to prevent stretched or black pixels at the edge of the format." R -1 1}
 addUserKnob {6 helper t "checker to indicate whether the rgb control knobs are disabled or not" +INVISIBLE +STARTLINE}
 helper true
 addUserKnob {20 curve n 1}
 curve 0
 addUserKnob {41 lut l "" +STARTLINE T TimeDissolve.lut}
 addUserKnob {22 reset l "reset curve to rgb values" T "node = nuke.thisNode()\nnode\['helper'].setValue(True)" +STARTLINE}
 addUserKnob {22 whatsthis l "What am I looking at?" -STARTLINE T "nuke.message(\"\"\"The x-axis represents the visible color spectrum (between 0 and 1, in the order red-green-blue), the y-axis represents the focus error. \n\nThe primary colours have a spread of 0.5, with their highest intensities being at the folowing x-values:\n\nred: x=0.25\ngreen: x=0.5\nblue: x=0.75\n\nwith mixed colors in between.\"\"\")"}
 addUserKnob {26 divider02 l " "}
 addUserKnob {20 endGroup n -1}
 addUserKnob {7 saturation t "Saturation of the effect"}
 saturation 1
 addUserKnob {7 weighting l weighting* t "Controls the falloff of the effect from the center to the corners.\n<1 less effect in the center\n>1 stronger effect in the center\n\n*Any value other than 1 causes an internal switch from Transform to STMap, which reduces the speed significantly." R 0 5}
 weighting 1
 addUserKnob {14 multiply t "Multiply of the effect." R 0 10}
 multiply 4
 addUserKnob {7 direction l direction* t "Controls how different multiply values in w/h affect the direction of the effect.\nDoesn't do anything if w/h are the same.\n\n*Any value other than 0 causes an internal switch from Transform to STMap, which reduces the speed significantly."}
 addUserKnob {12 center t "Center of the effect."}
 center {{width/2 i} {height/2 i}}
 addUserKnob {22 release_center l "release center" -STARTLINE T "node = nuke.thisNode()\nnode\['center'].clearAnimated()\nnode\['release_center'].setVisible(False)\nnode\['link_center'].setVisible(True)"}
 addUserKnob {22 link_center l "link to format center" -STARTLINE +HIDDEN T "node = nuke.thisNode()\nnode\['center'].setExpression('width/2',0)\nnode\['center'].setExpression('height/2',1)\nnode\['link_center'].setVisible(False)\nnode\['release_center'].setVisible(True)"}
 addUserKnob {6 invert t "Invert the effect. Useful to remove aberration." +STARTLINE}
 addUserKnob {41 filter T STMap.filter}
 addUserKnob {6 black_outside l "black outside" -STARTLINE}
 addUserKnob {26 divider03 l " "}
 addUserKnob {41 effect_mask l "effect mask*" t "The effect will be multiplied with the selected channel. Values above 1 will increase the effect, values below 1 decrease it.\n\n*Using the effect mask causes an internal switch from Transform to STMap, which reduces the speed significantly." T Copy5.from0}
 addUserKnob {6 invert_effect_mask l invert -STARTLINE}
 addUserKnob {41 maskChannelMask l mask T Dissolve.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Dissolve.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Dissolve.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Dissolve.fringe}
 addUserKnob {41 mix T Dissolve.which}
 addUserKnob {26 text_1 l "" +STARTLINE}
 addUserKnob {26 text l "" +STARTLINE T "* Changing these values can reduce the speed significantly. Read the tooltip."}
 addUserKnob {20 Info_tab l Info}
 addUserKnob {26 dasname l "" +STARTLINE T "per channel<br><font size='5'>Faberration</font> v1.04<br>"}
 addUserKnob {26 what l "" +STARTLINE T "pcFaberration creates a realistic (lateral) chromatic aberration effect.\nIt's driven by a curve that describes the focus error of a color depen-\nding on its position in the visible colour spectrum.\n\nIt is part of the pc toolset, a collection of nodes that offer the possi-\nbility to affect the channels separately. Chain them up in any way to\nachieve the desired effect.\n\nAn optional per channel alpha layer (pc_alpha) can be created to cor-\nrectly merge the result over a background. In this case it's necessary\nto use the pcMerge instead of a regular Merge."}
 addUserKnob {26 divider l "" +STARTLINE}
 addUserKnob {26 info l "" +STARTLINE T "Last change: 2020-01-06\n"}
 addUserKnob {26 name_1 l "" +STARTLINE T "\nFabian Holtz"}
 addUserKnob {26 mail l "" +STARTLINE T "<a href=\"mailto:holtzf+nuke@gmail.com\"><span style=\"color:#C8C8C8;\">holtzf+nuke@gmail.com</a>"}
}
 Input {
  inputs 0
  name mask
  xpos -1800
  ypos 2606
  number 1
 }
 Dot {
  name Dot1
  xpos -1766
  ypos 2682
 }
 Input {
  inputs 0
  name Input
  xpos -1580
  ypos -586
 }
 Dot {
  name Dot34
  xpos -1546
  ypos -390
 }
set N990b4c00 [stack 0]
 Dot {
  name Dot30
  xpos -886
  ypos -390
 }
set N990b4800 [stack 0]
 Dot {
  name Dot31
  xpos -776
  ypos -390
 }
 Expression {
  temp_name0 resx
  temp_expr0 width/res
  temp_name1 resy
  temp_expr1 height/ceil(res/width*height/pixel_aspect)
  channel0 none
  channel1 none
  channel2 none
  expr3 (1-clamp(floor((x+resx/2)%resx)))*(1-clamp(floor((y+resy/2)%resy)))*10
  name Expression3
  xpos -810
  ypos -322
  addUserKnob {20 User}
  addUserKnob {3 res}
  res {{max(parent.res,1)}}
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle4
  xpos -810
  ypos -274
 }
 Dot {
  name Dot32
  xpos -776
  ypos -222
 }
push $N990b4800
 Merge2 {
  inputs 2
  name Merge3
  xpos -920
  ypos -226
  disable {{!parent.show_vectors}}
 }
add_layer {pc_alpha pc_alpha.red pc_alpha.green pc_alpha.blue}
 Expression {
  temp_name0 exists
  temp_expr0 "\[string first \"pc_alpha\" \[layers \[input this 0]]]>-1"
  channel0 {pc_alpha.red -pc_alpha.green -pc_alpha.blue}
  expr0 exists?pc_alpha.red:a
  channel1 {-pc_alpha.red pc_alpha.green -pc_alpha.blue}
  expr1 exists?pc_alpha.green:a
  channel2 {-pc_alpha.red -pc_alpha.green pc_alpha.blue}
  expr2 exists?pc_alpha.blue:a
  channel3 none
  name Expression6
  xpos -920
  ypos -106
 }
 Remove {
  operation keep
  channels rgb
  channels2 pc_alpha
  name Remove1
  xpos -920
  ypos -10
 }
 Dot {
  name Dot23
  xpos -886
  ypos 90
 }
set N990e0800 [stack 0]
 Dot {
  name Dot37
  xpos -1216
  ypos 90
 }
 Dot {
  name Dot29
  xpos -1216
  ypos 2130
 }
set N990e0000 [stack 0]
 Input {
  inputs 0
  name effect_mask
  xpos -260
  ypos 446
  number 2
 }
 Dot {
  name Dot11
  xpos -226
  ypos 546
 }
set N99107800 [stack 0]
push $N99107800
 Copy {
  inputs 2
  to0 rgba.red
  from1 {{{from0}}}
  to1 rgba.green
  name Copy5
  xpos -260
  ypos 608
 }
 Invert {
  channels {rgba.red -rgba.green -rgba.blue none}
  name Invert1
  xpos -260
  ypos 710
  disable {{!parent.invert_effect_mask}}
 }
 Dot {
  name Dot24
  xpos -226
  ypos 810
 }
push $N990e0800
 NoTimeBlur {
  rounding floor
  name NoTimeBlur1
  xpos -920
  ypos 206
 }
 Remove {
  operation keep
  channels rgb
  channels2 pc_alpha
  name Remove2
  xpos -920
  ypos 446
 }
 Dot {
  name Dot18
  xpos -886
  ypos 546
 }
set N99106000 [stack 0]
 Dot {
  name Dot26
  xpos -666
  ypos 546
 }
set N9912bc00 [stack 0]
 Dot {
  name Dot22
  xpos -446
  ypos 546
 }
 Expression {
  temp_name0 center
  temp_expr0 parent.center
  expr0 hypot(x+.5-center.x,(y+.5-center.y)/pixel_aspect)/hypot(width/2,height/2/pixel_aspect)
  expr1 abs(1-abs(atan(x-center.x,(y-center.y)/pixel_aspect)/pi)*2)
  channel2 none
  channel3 none
  name Expression2
  xpos -480
  ypos 614
 }
 Expression {
  temp_name0 power
  temp_expr0 1/parent.weighting
  expr0 r==0?0:1/r*pow(r,power)
  expr1 r==0?0:1/r*pow(r,power)*(1-lerp(1-g,0,parent.multiply.w)-lerp(g,0,parent.multiply.h))
  channel2 none
  channel3 none
  name Expression4
  xpos -480
  ypos 710
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels {rgba.red rgba.green -rgba.blue none}
  Bchannels {rgba.red rgba.green -rgba.blue none}
  output {rgba.red rgba.green -rgba.blue none}
  name Merge5
  xpos -480
  ypos 806
  disable {{"!\[exists parent.input2.name] || Copy5.from0==0"}}
 }
 NoTimeBlur {
  name NoTimeBlur2
  xpos -480
  ypos 902
 }
 Expression {
  temp_name0 center
  temp_expr0 parent.center
  temp_name1 scale
  temp_expr1 detour.scale
  temp_name2 multiply
  temp_expr2 parent.multiply
  expr0 ((x+.5-center.x)/(scale*lerp(multiply.w*r,g,parent.direction)+1)+center.x)/width
  expr1 ((y+.5-center.y)/(scale*lerp(multiply.h*r,g,parent.direction)+1)+center.y)/height
  channel3 none
  name Expression1
  xpos -480
  ypos 998
 }
 Dot {
  name Dot27
  xpos -446
  ypos 1098
 }
push $N9912bc00
 BlackOutside {
  name BlackOutside1
  xpos -700
  ypos 998
  disable {{!parent.black_outside}}
 }
 STMap {
  inputs 2
  uv rgb
  name STMap
  xpos -700
  ypos 1088
 }
 Dot {
  name Dot25
  xpos -666
  ypos 1290
 }
push $N99106000
 Transform {
  scale {{parent.detour.scale*parent.multiply.w+1} {parent.detour.scale*parent.multiply.h+1}}
  center {{parent.center} {parent.center}}
  filter {{STMap.filter}}
  black_outside {{parent.black_outside}}
  shutteroffset centred
  name Transform
  xpos -920
  ypos 998
 }
 Switch {
  inputs 2
  which {{"parent.weighting!=1 || Copy5.from0!=0 || parent.multiply.w != parent.multiply.h && parent.direction!=0"}}
  name Switch2
  xpos -920
  ypos 1286
 }
add_layer {correct_values correct_values.red correct_values.green correct_values.blue none correct_values.alpha}
 AddChannels {
  channels correct_values
  color 1
  name AddChannels1
  xpos -920
  ypos 1328
 }
 Multiply {
  value {{lerp(luminance,spectrum.r,parent.saturation)} {lerp(luminance,spectrum.g,parent.saturation)} {lerp(luminance,spectrum.b,parent.saturation)} {curve}}
  name Multiply1
  xpos -920
  ypos 1376
  addUserKnob {20 User}
  addUserKnob {18 spectrum}
  spectrum {{curve(x%1) L 0 x0.25 1 0} {curve(x%1) L x0.25 0 x0.5 1 0} {curve(x%1) L x0.5 0 x0.75 1 0}}
  addUserKnob {6 spectrum_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 spectrum_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {7 luminance}
  luminance {{spectrum.r*0.2126+spectrum.g*0.7152+spectrum.b*0.0722}}
 }
set N9a002400 [stack 0]
 TimeWarp {
  lookup {{frame_knob(lerp(x,mapper,parent.optimize_mix))}}
  time ""
  filter none
  name TimeWarp
  xpos -920
  ypos 1454
  addUserKnob {20 User}
  addUserKnob {7 frame_knob l frame}
  frame_knob {{x i}}
  addUserKnob {7 mapper}
  mapper {{curve(x%1)+floor(x) 0 x1.094667482e-10 0.01010101009 0.02020202018 0.03030303121 0.04040404037 0.05050504953 0.06060606241 x7.662672163e-10 0.07070706785 x8.757339853e-10 0.08080808073 x9.852006988e-10 0.09090909362 x1.094667468e-09 0.1010100991 0.1111111119 0.1212121248 0.1313131303 x1.532534433e-09 0.1414141357 x1.642001202e-09 0.151515156 0.1616161615 0.1717171669 x1.970401398e-09 0.1818181872 x2.079868278e-09 0.1919191927 x2.189334936e-09 0.2020201981 x2.298801816e-09 0.2121212184 x2.408268474e-09 0.2222222239 0.2323232293 x2.627202011e-09 0.2424242496 x4.936365272e-08 0.2525252402 x5.858148143e-06 0.2626262605 x3.415297397e-05 0.2727272809 x0.0001029226696 0.2828282714 x0.0002301560744 0.2929292917 x0.0004338420113 0.3030303121 x0.0007319693104 0.3131313026 x0.00114252686 0.3232323229 x0.001683503389 0.3333333433 x0.002372887684 0.3434343338 x0.003228668822 0.3535353541 x0.004268835764 0.3636363745 x0.005511376541 0.373737365 x0.006974280812 0.3838383853 x0.008675537072 0.3939394057 x0.01063313428 0.4040403962 x0.01286506094 0.4141414165 x0.01538930647 0.4242424369 x0.01822385937 0.4343434274 x0.0213867072 0.4444444478 x0.02489584126 0.4545454681 x0.0287692491 0.4646464586 x0.03302491829 0.474747479 x0.03768084198 0.4848484993 x0.04275500402 0.4949494898 x0.04837520421 0.5050504804 x0.05519128218 0.5151515007 x0.06326208264 0.525252521 x0.07253363729 0.5353535414 x0.0829519853 0.5454545617 x0.09446314722 0.555555582 x0.1070131734 0.5656565428 x0.1205480769 0.5757575631 x0.1350139081 0.5858585835 x0.1503566951 0.5959596038 x0.1665224731 0.6060606241 x0.1834572703 0.6161616445 x0.2011071295 0.6262626052 x0.2194180638 0.6363636255 x0.238336131 0.6464646459 x0.2578073442 0.6565656662 x0.2777777612 0.6666666865 x0.2981933951 0.6767676473 x0.3190003037 0.6868686676 x0.3401444852 0.6969696879 x0.3615719974 0.7070707083 x0.3832288682 0.7171717286 x0.4050611258 0.7272727489 x0.4270147979 0.7373737097 x0.4490359426 0.74747473 x0.4710743725 0.7575757504 x0.4931129515 0.7676767707 0.777777791 0.7878788114 0.7979797721 0.8080807924 x0.603305757 0.8181818128 x0.625344336 0.8282828331 0.8383838534 0.8484848738 0.8585858345 x0.7134985924 0.8686868548 x0.7355371714 0.8787878752 0.8888888955 0.8989899158 0.9090909362 x0.8236914277 0.9191918969 x0.8457300067 0.9292929173 0.9393939376 0.9494949579 0.9595959783 0.9696969986 x0.955922842 0.9797979593 x0.977961421 0.9898989797 1}}
 }
 Multiply {
  value {{parent.TimeWarp.lookup.derivative(x)}}
  name Multiply3
  xpos -920
  ypos 1520
 }
 TimeBlur {
  divisions {{parent.samples}}
  shutter {{1/(divisions+1)*divisions}}
  shuttercustomoffset {{1/(divisions+1)}}
  name TimeBlur
  xpos -920
  ypos 1598
 }
set N9a035800 [stack 0]
 Expression {
  expr0 correct_values.red==0
  expr1 correct_values.green==0
  expr2 correct_values.blue==0
  channel3 none
  name Expression5
  xpos -814
  ypos 1626
 }
 Shuffle {
  out correct_values
  out2 pc_alpha
  name Shuffle1
  xpos -814
  ypos 1652
 }
push $N9a002400
 TimeBlur {
  divisions 3
  shutter 0.75
  shuttercustomoffset 0.25
  name TimeBlur1
  xpos -700
  ypos 1598
 }
 Merge2 {
  inputs 2
  operation multiply
  also_merge all
  name Merge4
  xpos -700
  ypos 1681
 }
push $N9a035800
 Merge2 {
  inputs 2
  operation plus
  also_merge all
  name Merge2
  xpos -920
  ypos 1760
  disable true
 }
 Dot {
  name Dot16
  xpos -886
  ypos 1794
 }
set N9a034000 [stack 0]
push $N9a034000
 Dot {
  name Dot17
  xpos -1106
  ypos 1794
 }
 Shuffle {
  in correct_values
  alpha blue
  black red
  white green
  red2 blue
  out rgb
  out2 pc_alpha
  name Shuffle3
  label "\[value in]"
  xpos -1140
  ypos 1856
 }
 Dot {
  name Dot15
  xpos -1106
  ypos 1938
 }
 Merge2 {
  inputs 2
  operation divide
  Achannels rgb
  Bchannels rgb
  output rgb
  also_merge pc_alpha
  name Merge1
  xpos -920
  ypos 1934
 }
set N9a063000 [stack 0]
 Switch {
  inputs 2
  which {{TimeBlur.divisions<2 i}}
  name Switch1
  xpos -920
  ypos 2126
 }
 Dot {
  name Dot9
  xpos -886
  ypos 2370
 }
set N9a062800 [stack 0]
 Dot {
  name Dot8
  xpos -886
  ypos 2466
 }
set N9a062400 [stack 0]
 Group {
  name GenerateAlpha
  tile_color 0x7f7f7fff
  xpos -920
  ypos 2558
  addUserKnob {20 GenerateAlpha_tab l GenerateAlpha}
  addUserKnob {4 operation M {original average luminance max min "" "" "" ""}}
  operation average
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 14
  }
  Dot {
   name Dot1
   xpos -6
   ypos 114
  }
set N9a08dc00 [stack 0]
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 min(pc_alpha.red,pc_alpha.green,pc_alpha.blue)
   channel1 none
   channel2 none
   channel3 none
   name min
   xpos 180
   ypos 206
  }
push $N9a08dc00
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 max(pc_alpha.red,pc_alpha.green,pc_alpha.blue)
   channel1 none
   channel2 none
   channel3 none
   name max
   xpos 70
   ypos 206
  }
push $N9a08dc00
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 pc_alpha.red*0.2126+pc_alpha.green*0.7152+pc_alpha.blue*0.0722
   channel1 none
   channel2 none
   channel3 none
   name luminance
   selected true
   xpos -40
   ypos 206
  }
push $N9a08dc00
  Expression {
   channel0 {none none none rgba.alpha}
   expr0 (pc_alpha.red+pc_alpha.green+pc_alpha.blue)/3
   channel1 none
   channel2 none
   channel3 none
   name average
   xpos -150
   ypos 206
  }
push $N9a08dc00
  Dot {
   name Dot2
   xpos -226
   ypos 210
  }
  Switch {
   inputs 5
   which {{parent.operation}}
   name Switch1
   xpos -40
   ypos 302
  }
  Output {
   name Output1
   xpos -40
   ypos 398
  }
 end_group
push $N9a062400
push $N9a062800
push $N990e0000
 Dot {
  name Dot2
  xpos -1216
  ypos 2154
 }
push $N990b4c00
 Copy {
  inputs 2
  channels pc_alpha
  name Copy10
  xpos -1580
  ypos 2137
  disable {{"parent.output==0 || Dissolve.which<=0"}}
 }
 Dot {
  name Dot6
  xpos -1546
  ypos 2274
 }
set N99d79400 [stack 0]
 Dot {
  name Dot7
  xpos -1326
  ypos 2274
 }
 Copy {
  inputs 2
  channels rgb
  name Copy1
  xpos -1360
  ypos 2353
  disable {{parent.output==2}}
 }
 Copy {
  inputs 2
  channels pc_alpha
  name Copy6
  xpos -1360
  ypos 2449
  disable {{parent.output==0}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy11
  xpos -1360
  ypos 2552
  disable {{GenerateAlpha.operation==0}}
 }
 Dot {
  name Dot10
  xpos -1326
  ypos 2682
 }
push $N99d79400
 Dissolve {
  inputs 2+1
  which 1
  maskChannelMask none
  name Dissolve
  xpos -1580
  ypos 2672
  disable {{"(!\[exists parent.input0.name]) && (Merge3.disable)"}}
 }
 Output {
  name Output1
  xpos -1580
  ypos 2798
 }
 NoOp {
  inputs 0
  name detour
  xpos -810
  ypos 902
  addUserKnob {20 User}
  addUserKnob {7 scale R -10 10}
  scale {{TimeDissolve.lut(x%1)*(parent.invert?-1:1)/100}}
 }
 Multiply {
  inputs 0
  value {{TimeDissolve.lut.derivative(x) i}}
  name Multiply2
  xpos -654
  ypos 858
 }
 TimeDissolve {
  inputs 0
  lut {curve {curve l x0.25 0 x0.5 0.1 1}}
  name TimeDissolve
  knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\nparent = nuke.thisParent()\n\ndef optimize():\n    with parent:\n        curve = nuke.toNode('TimeDissolve')\['lut']\n        samples = 100\n        previous_value = 0\n        distance = 0\n        value_dict = \{\}\n        for n in xrange(0,samples):\n            x = 1.0/(samples-1)*n\n            value = curve.getValueAt(x)\n            if n > 0:\n                distance += abs(value-previous_value)\n            value_dict\[x] = distance\n            previous_value = value\n        tw_lookup = nuke.toNode('TimeWarp')\['mapper']\n        tw_lookup.clearAnimated()\n        tw_lookup.setAnimated()\n        anim_list = \[]\n        for n in sorted(value_dict.keys()):\n            anim_list.append(nuke.AnimationKey(value_dict\[n]/distance,n))\n        anim = tw_lookup.animation(0)\n        anim.addKey(anim_list)\n        tw_lookup.setExpression('curve(x%1)+floor(x)')\n\nif knob.name() == 'lut':\n    if parent\['helper'].value() is True:\n        parent\['scale'].setFlag(nuke.DISABLED)\n        parent\['offset'].setFlag(nuke.DISABLED)\n        parent\['helper'].setValue(False)\n    optimize()\n\nif knob.name() == 'helper':\n    optimize()"
  xpos -810
  ypos 806
  addUserKnob {20 User}
  addUserKnob {6 helper +STARTLINE}
 }
push $N9a035800
push $N9a063000
 Viewer {
  inputs 2
  frame_range 1-1
  colour_sample_bbox {-0.2645833194 -0.1854166687 -0.2635416687 -0.184375003}
  name Viewer1
  xpos -504
  ypos 1478
 }
end_group
