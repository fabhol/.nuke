set cut_paste_input [stack 0]
version 11.3 v4
push $cut_paste_input
add_layer {P_filt P_filt.red P_filt.green P_filt.blue P_filt.alpha}
Group {
 name DerProjector
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob().name()\n\nif knob == 'output':\n    output()\nelif knob == 'method':\n    method()\nelif knob == 'operation':\n    operation()\nelif knob == 'undistort':\n    create_input(knob,'undistortion_map',\[-810,-334],'Dot9')\nelif knob == 'redistort':\n    create_input(knob,'distortion_map',\[-1030,1371],'Dot16')\nelif knob == 'enable_render_cam':\n    create_input(knob,'render_cam',\[-150,-334],'Dot12')\n\n\ndef output():\n    mblur()\n\ndef method():\n    mblur()\n    node.knobs()\['P'].setVisible(node\['method'].value() == 'P')\n    node.knobs()\['project_on'].setVisible(node\['method'].value() == 'geo')\n    node.knobs()\['oscan'].setEnabled(node\['method'].value() == 'geo')\n    node.knobs()\['enable_render_cam'].setVisible(node\['method'].value() == 'geo')\n    with node:\n        for n in nuke.allNodes('Input'):\n            if n.name() in \['P','geo']:\n                n\['name'].setValue(node\['method'].value())\n\ndef operation():\n    mblur()\n    node.knobs()\['pframe'].setVisible(node\['operation'].value() in \['matchmove','stabilize'])\n    node.knobs()\['offset'].setVisible(node\['operation'].value() in \['offset'])\n\ndef mblur():\n    bla = node\['output'].value() == 'image' and node\['method'].value() == 'geo' and node\['operation'].value() == 'matchmove'\n    node.knobs()\['mblur'].setEnabled(bla)\n    node.knobs()\['samples'].setEnabled(bla)\n    node.knobs()\['shutter'].setEnabled(bla)\n\ndef create_input(knob,input_name,pos,dependent_node):\n    if node\[knob].value() is True:\n        with node:\n            n = nuke.toNode(input_name)\n            if n is None:\n                input = nuke.nodes.Input(name=input_name,\n                                            xpos=pos\[0],\n                                            ypos=pos\[1],\n                                            tile_color=16711935,\n                                            label='\[value number]')\n                nuke.toNode(dependent_node).connectInput(0, input)\n            else:\n                pass"
 tile_color 0x3af39aff
 selected true
 xpos 620
 ypos 177
 addUserKnob {20 Projector}
 addUserKnob {26 warning l "" +STARTLINE T "Make sure P is unpremulted and P and distortion maps are 32bit"}
 addUserKnob {26 ""}
 addUserKnob {4 output t "Choose whether to output the final image or an UVMap. With the UVMap you can transform several sources at the same time while only calculating the projection once.\n\nNo motionblur possible with the UVMap output." M {image UVMap}}
 addUserKnob {6 undistort l "undistort before" t "Undistort the image before projecting. Usually necessary when stabilizing/offsetting plates or projecting rotos.\nNeeds a connected undistortion UVMap." +STARTLINE}
 addUserKnob {6 redistort l "redistort after" t "Redistort the image after the projection. Usually necessary when you want to use the result directly with the plate.\nNeeds a connected distortion UVMap." -STARTLINE}
 addUserKnob {6 crop l INVISIBLE t "Get rid of any information outside of the frame.\nOverscan is supported though, when using the geo method and the image is aready undistorted." +INVISIBLE +STARTLINE}
 crop {{"method || undistort"}}
 addUserKnob {26 ""}
 addUserKnob {4 method t "geo: needs a geometry plugged in to project on. make sure it's in the right position relative to the camera.\n\nP: needs a point world position pass to project on. make sure you have the right camera (the same that has been used to render the P) connected.\nBe aware of artifacts at object edges." M {geo P}}
 addUserKnob {41 project_on l "  |  project on" -STARTLINE T Project3D1.project_on}
 addUserKnob {41 P l "  |  P layer" -STARTLINE +HIDDEN T Shuffle1.in}
 addUserKnob {4 operation t "matchmove: projects the image with the frameholded matchmove camera on the geometry/ppos and films it with the animated camera.\n\nstabilize: projects the image with the animated matchmove camera on the geometry/ppos and films it with the frameholded camera.\n\noffset: offsets the image in time while keeping it in position. Useful for example for paintouts of moving objects." M {matchmove stabilize offset "" "" "" ""}}
 addUserKnob {3 offset l "  |  time offset" -STARTLINE +HIDDEN}
 addUserKnob {3 pframe l "  |  projection frame" -STARTLINE}
 pframe 1001
 addUserKnob {6 enable_render_cam l "seperate render cam" t "Use a seperate camera to render. If unchecked the projection cam will be used." -STARTLINE}
 addUserKnob {14 oscan l overscan t "only possible with <b>geo method</b> and <b>no un-/redistortion</b> applied" R 0 100}
 addUserKnob {26 ""}
 addUserKnob {7 blur l "blur UVMap" t "Using the P may result in a decreased quality. Slightly blurring the UVMap before applying can help here, but be careful of distortions at the edges." R 0 10}
 addUserKnob {41 filter t "If the image has wobbly distortion effects after the projection, try using a different filter (Keys usually looks good)." T STMap2.filter}
 addUserKnob {6 mblur l "motion blur" t "Motion blur is only supported with the geo method." +STARTLINE}
 addUserKnob {3 samples l " |  samples" t "Number of samples to render to produce motion blur." -STARTLINE}
 samples 10
 addUserKnob {7 shutter t "This is how long the shutter should be open for when motion blurring.\nThe value is in frames, so 0.5 is half a frame."}
 shutter 0.5
 addUserKnob {20 Info_tab l Info}
 addUserKnob {26 dasname l "" +STARTLINE T "<font size='5'>DerProjector</font> v0.1<br>"}
 addUserKnob {26 what l "" +STARTLINE T "Projection toolset with lots of options using STMaps for highest quality."}
 addUserKnob {26 divider l "" +STARTLINE}
 addUserKnob {26 info l "" +STARTLINE T "Last change: 2019-09-27\n"}
 addUserKnob {26 name_1 l "" +STARTLINE T "\nFabian Holtz"}
 addUserKnob {26 mail l "" +STARTLINE T "<a href=\"mailto:holtzf+nuke@gmail.com\"><span style=\"color:#C8C8C8;\">holtzf+nuke@gmail.com</a>"}
}
 Dot {
  inputs 0
  name Dot16
  xpos -996
  ypos 1578
 }
 NoTimeBlur {
  name NoTimeBlur2
  xpos -920
  ypos 1575
 }
 Input {
  inputs 0
  name geo
  tile_color 0xff00ff
  label "\[value number]"
  xpos 70
  ypos -334
  number 2
 }
 Dot {
  name Dot2
  xpos 104
  ypos 498
 }
set N3c885510 [stack 0]
 Shuffle {
  in {P_filt.red P_filt.green P_filt.blue -P_filt.alpha}
  alpha alpha2
  out rgb
  name Shuffle1
  label "\[value in]:\[value out]"
  xpos 70
  ypos 729
 }
 FrameHold {
  first_frame {{parent.pframe}}
  name FrameHold3
  xpos 70
  ypos 921
  disable {{parent.operation!=1}}
 }
 Expression {
  temp_name0 ia
  temp_expr0 width/height
  expr0 "((r-cwm.3)*cwm.0+(g-cwm.7)*cwm.4+(b-cwm.11)*cwm.8)/-((r-cwm.3)*cwm.2+(g-cwm.7)*cwm.6+(b-cwm.11)*cwm.10)/ndc * 0.5 +0.5"
  expr1 "((r-cwm.3)*cwm.1+(g-cwm.7)*cwm.5+(b-cwm.11)*cwm.9)/-((r-cwm.3)*cwm.2+(g-cwm.7)*cwm.6+(b-cwm.11)*cwm.10)/ndc * pixel_aspect * ia * 0.5 + 0.5"
  expr2 0
  expr3 "r!=0 || g!=0"
  name ppos2uv
  xpos 70
  ypos 1047
  addUserKnob {20 User}
  addUserKnob {78 cwm l "camera world matrix" n 16}
  cwm {{"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"} {"\[topnode parent.input1].world_matrix(ref_frame)"}}
  addUserKnob {7 ndc}
  ndc {{"\[topnode parent.input1].haperture(ref_frame) / \[topnode parent.input1].focal(ref_frame) / 2"}}
  addUserKnob {3 ref_frame l "ref frame"}
  ref_frame {{parent.operation==0?parent.pframe:parent.operation==1?x:x-parent.offset}}
 }
 Premult {
  name Premult2
  xpos 70
  ypos 1167
 }
 Dot {
  name Dot10
  xpos 104
  ypos 1242
 }
set N64ff2dd0 [stack 0]
 Dot {
  name Dot18
  xpos -446
  ypos 1242
 }
set Nf093c460 [stack 0]
 Dot {
  name Dot19
  xpos -446
  ypos 1314
 }
push $Nf093c460
 Dot {
  inputs 0
  name Dot9
  xpos -776
  ypos -174
 }
set N98ffc880 [stack 0]
 Dot {
  name Dot11
  xpos -556
  ypos -174
 }
 STMap {
  inputs 2
  uv rgb
  name STMap3
  xpos -590
  ypos 1233
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -590
  ypos 1305
 }
push $N64ff2dd0
 Dot {
  name Dot17
  xpos 104
  ypos 1386
 }
 Switch {
  inputs 2
  which {{parent.undistort}}
  name Switch1
  xpos -590
  ypos 1383
 }
 Dot {
  inputs 0
  name Dot12
  xpos -116
  ypos -174
 }
 Input {
  inputs 0
  name projection_cam
  tile_color 0xff00ff
  label "\[value number]"
  xpos -370
  ypos -334
  number 1
 }
 Dot {
  name Dot1
  xpos -336
  ypos -78
 }
set N3d675380 [stack 0]
 Switch {
  inputs 2
  which {{parent.enable_render_cam}}
  name Switch5
  xpos -150
  ypos -81
 }
 FrameHold {
  first_frame {{parent.pframe}}
  name FrameHold2
  xpos -150
  ypos 921
  disable {{parent.operation!=1}}
 }
 Dot {
  name Dot3
  xpos -116
  ypos 1146
 }
push $N3d675380
 FrameHold {
  first_frame {{parent.pframe}}
  name FrameHold1
  xpos -370
  ypos 57
  disable {{parent.operation!=0}}
 }
 TimeOffset {
  time_offset {{parent.offset}}
  time ""
  name TimeOffset2
  xpos -370
  ypos 135
  disable {{parent.operation!=2}}
 }
 Dot {
  name Dot8
  xpos -336
  ypos 282
 }
push $N98ffc880
 Expression {
  expr3 "r!=0 || g!=0"
  name Expression1
  xpos -810
  ypos -129
 }
 Input {
  inputs 0
  name image
  tile_color 0xff00ff
  label "\[value number]"
  xpos -1250
  ypos -334
 }
 Dot {
  name Dot5
  xpos -1216
  ypos -78
 }
set Nb7b51c40 [stack 0]
 Expression {
  expr0 (x+.5)/width
  expr1 (y+.5)/height
  expr2 0
  expr3 1
  name Generator
  xpos -1030
  ypos -81
 }
 Switch {
  inputs 2
  which {{parent.undistort}}
  name Switch2
  xpos -810
  ypos -81
 }
 NoTimeBlur {
  name NoTimeBlur3
  xpos -810
  ypos 111
 }
 Project3D2 {
  inputs 2
  crop false
  name Project3D1
  xpos -810
  ypos 279
 }
push $N3c885510
 ApplyMaterial {
  inputs 2
  name ApplyMaterial1
  xpos -810
  ypos 495
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{Switch2.width}}
  box_height {{Switch2.height}}
  box_fixed true
  box_pixel_aspect {{Switch2.pixel_aspect}}
  resize distort
  name Reformat1
  xpos -1030
  ypos 927
 }
 Dot {
  name Dot6
  xpos -996
  ypos 1146
 }
 ScanlineRender {
  inputs 3
  filter {{STMap2.filter x1083 2}}
  overscan {{parent.oscan} {parent.oscan}}
  motion_vectors_type off
  MB_channel none
  name ScanlineRender
  xpos -810
  ypos 1143
 }
 Switch {
  inputs 2
  which {{method}}
  name method
  xpos -810
  ypos 1383
 }
 STMap {
  inputs 2
  uv rgb
  filter {{STMap2.filter x1083 2}}
  name STMap1
  xpos -810
  ypos 1569
  disable {{!parent.redistort}}
 }
 Blur {
  channels rgba
  size {{parent.blur}}
  name Blur_STMap
  xpos -810
  ypos 1647
 }
 Unpremult {
  name Unpremult1
  xpos -810
  ypos 1719
 }
 Dot {
  name Dot14
  xpos -776
  ypos 1938
 }
set Nfffd890 [stack 0]
 Dot {
  name Dot7
  xpos -556
  ypos 1938
 }
 Dot {
  name Dot15
  xpos -556
  ypos 2346
 }
push $Nfffd890
push $Nb7b51c40
 TimeOffset {
  time_offset {{parent.offset}}
  time ""
  name TimeOffset
  xpos -1250
  ypos 927
  disable {{!(parent.operation==2)}}
 }
 Dot {
  name Dot4
  xpos -1216
  ypos 2082
 }
 NoTimeBlur {
  name NoTimeBlur1
  xpos -1030
  ypos 2079
 }
 STMap {
  inputs 2
  uv rgb
  name STMap2
  xpos -810
  ypos 2073
 }
 TimeBlur {
  divisions {{parent.samples}}
  shutter {{parent.shutter}}
  shutteroffset centred
  shuttercustomoffset 0
  name Motionblur
  xpos -810
  ypos 2199
  disable {{"!(parent.mblur && parent.method==0 && parent.operation==0)"}}
 }
 Switch {
  inputs 2
  which {{parent.output}}
  name Switch3
  xpos -810
  ypos 2343
 }
 Output {
  name Output1
  xpos -810
  ypos 2535
 }
end_group
